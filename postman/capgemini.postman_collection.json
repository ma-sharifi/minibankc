{
	"info": {
		"_postman_id": "db7b1b5d-f7fd-4edd-8416-1a491773f4bd",
		"name": "capgemini",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Open Account for existing Customer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201 using to have\", function () {",
							"  pm.response.to.have.status(201);",
							"});",
							"",
							"",
							"pm.test(\"The response has all properties\", () => {",
							"    //parse the response JSON and test three properties",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson.balance).exist;",
							"    pm.expect(responseJson.id).exist;",
							"    pm.expect(responseJson.created_at).exist;",
							"    pm.expect(responseJson.transactions).exist;",
							"    pm.expect(responseJson.transactions[0].id).exist;",
							"    pm.expect(responseJson.transactions[0].amount).exist;",
							"    pm.expect(responseJson.transactions[0].created_at).exist;",
							"    pm.expect(responseJson.transactions[0].reference_no).exist;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Initial-Credit",
						"value": "1",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "5"
				},
				"url": {
					"raw": "http://localhost:8080/v1/customers/1/accounts",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"v1",
						"customers",
						"1",
						"accounts"
					]
				}
			},
			"response": []
		},
		{
			"name": "ping",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"The response has all properties\", () => {",
							"    const text = pm.response.text();",
							"    pm.expect(text).to.eql('pong');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/v1/ping",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"v1",
						"ping"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Customer info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 using to have\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"The response has all properties\", () => {",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson.name).to.eql('Mahdi');",
							"    pm.expect(responseJson.surname).to.be.a('string');",
							"    pm.expect(responseJson.accounts[0].balance).to.eql(0);",
							"    pm.expect(responseJson.accounts[0].transactions[0].new_balance).to.eql(0);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Initial-Credit",
						"value": "",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "5"
				},
				"url": {
					"raw": "http://localhost:8080/v1/customers/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"v1",
						"customers",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET account",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"The response has all properties\", () => {",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson.balance).to.be.eql(0);",
							"    pm.expect(responseJson.id).to.be.eql(1);",
							"",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Initial-Credit",
						"value": "2",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "5"
				},
				"url": {
					"raw": "http://localhost:8080/v1/accounts/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"v1",
						"accounts",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create new Customer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201 using to have\", function () {",
							"  pm.response.to.have.status(201);",
							"});",
							"",
							"",
							"pm.test(\"The response has all properties\", () => {",
							"    //parse the response JSON and test three properties",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson.balance).exist;",
							"    pm.expect(responseJson.id).exist;",
							"    pm.expect(responseJson.created_at).exist;",
							"    pm.expect(responseJson.transactions).exist;",
							"    pm.expect(responseJson.transactions[0].id).exist;",
							"    pm.expect(responseJson.transactions[0].amount).exist;",
							"    pm.expect(responseJson.transactions[0].created_at).exist;",
							"    pm.expect(responseJson.transactions[0].reference_no).exist;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Mahdi\",\n    \"surname\": \"Sharifi\",\n    \"created_at\": \"2022-04-30T04:22:26.543+00:00\"\n}"
				},
				"url": {
					"raw": "http://localhost:8080/v1/customers",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"v1",
						"customers"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET all account",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Initial-Credit",
						"value": "2",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/v1/accounts",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"v1",
						"accounts"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET all customers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Initial-Credit",
						"value": "2",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/v1/customers",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"v1",
						"customers"
					]
				}
			},
			"response": []
		}
	]
}